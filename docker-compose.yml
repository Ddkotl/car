services:
  # Начало секции с сервисами
  db:
    # Определение сервиса базы данных
    container_name: ${POSTGRES_CONTAINER} # Имя контейнера для базы данных
    image: postgres:15.2 # Используемый образ PostgreSQL
    restart: always # Перезапускать контейнер всегда в случае сбоя
    environment:
      # Переменные окружения для настройки базы данных
      - POSTGRES_USER=${POSTGRES_USER} # Пользователь базы данных
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Пароль пользователя базы данных
      - POSTGRES_DB=${POSTGRES_DB} # Имя базы данных
    ports:
      # Настройка портов
      - ${POSTGRES_PORT}:5432 # Проброс порта 5432 контейнера на порт 5433 хоста
    volumes:
      # Настройка томов для хранения данных
      - postgres_data_car:/var/lib/postgresql/data # Хранение данных PostgreSQL в томе postgres_data
    networks:
      # Настройка сетей
      - backend_car # Подключение к сети backend
  g4f:
    container_name: g4f_service
    image: hlohaus789/g4f:latest-slim
    restart: always
    ports:
      - ${G4F_PORT}:1337 # Пробрасываем порт 1337
    volumes:
      - ./har_and_cookies:/app/har_and_cookies # Монтируем директорию har_and_cookies
      - ./generated_images:/app/generated_images # Монтируем директорию generated_images
    command: >
      sh -c ' rm -r -f /app/g4f/ && pip install -U g4f[slim] && python -m g4f --debug'
    networks:
      # Настройка сетей
      - backend_car # Подключение к сети backend  "
  minio:
    container_name: ${MINIO_CONTAINER}
    image: minio/minio
    restart: always
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_ADMIN_PORT}:9001
    command: minio server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data_car:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      # Настройка сетей
      - backend_car # Подключение к сети backend
  createbuckets:
    container_name: minio-bucket
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c " sleep 5; /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}; /usr/bin/mc mb myminio/${S3_IMAGES_BUCKET}; /usr/bin/mc anonymous set public myminio/${S3_IMAGES_BUCKET}; exit 0; "
    networks:
      - backend_car

  tor:
    image: dperson/torproxy
    container_name: tor_proxy
    restart: unless-stopped
    ports:
      - "127.0.0.1:9050:9050" # SOCKS5 Proxy
    environment:
      - TZ=UTC
    networks:
      - backend_car

volumes:
  # Определение томов
  postgres_data_car:
  minio_data_car:

networks:
  backend_car:
